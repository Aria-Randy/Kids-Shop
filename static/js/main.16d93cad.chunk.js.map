{"version":3,"sources":["logo.svg","Cart.js","data.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["connect","state","alert변경","reducer2","reducer","props","Table","responsive","map","a","i","id","name","quan","onClick","dispatch","type","데이터","className","Data","title","content","price","재고context","React","createContext","Detail","lazy","Pajama","재고","useContext","history","useHistory","push","pajama","src","width","alt","App","useState","pajama변경","로딩","로딩변경","더보기카운트","더보기카운트변경","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","then","result","console","log","data","catch","error","window","alert","fallback","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","payload","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.16d93cad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport {connect} from 'react-redux';\n\nfunction Cart(props){\n  return(\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>상품명</th>\n            <th>수량</th>\n            <th>변경</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.state.map((a, i) => {\n              return(\n              <tr key={i}>\n                <td>{a.id}</td>\n                <td>{a.name}</td>\n                <td>{a.quan}</td>\n                <td>\n                  <button onClick={() => {props.dispatch( {type : '수량증가', 데이터 : a.id} )}}>+</button>\n                  &nbsp;\n                  <button onClick={() => {props.dispatch( {type : '수량감소', 데이터 : a.id} )}}>-</button>\n                </td>\n              </tr>\n              )\n            })\n          }\n        </tbody>\n      </Table>\n      { props.alert변경 === true\n      ? <div className=\"Detail__alert\">\n          <p>지금 구매하시면 20% 신규할인!</p>\n          <button onClick={() => {props.dispatch( {type : 'alert끄기'} )}}>닫기</button>\n        </div>\n      : null\n      }\n\n    </div>\n  )\n}\n\nfunction 함수명(state){\n  return {\n    alert변경 : state.reducer2,\n    state : state.reducer\n  }\n}\n\nexport default connect (함수명)(Cart);","let Data = [\n  {\n    id : 0,\n    title : \"Junior Gown\",\n    content : \"Born in Korea\",\n    price : 53000,\n  },\n\n  {\n    id : 1,\n    title : \"Girl Pajama\",\n    content : \"Born in USA\",\n    price : 46000\n  },\n\n  {\n    id : 2,\n    title : \"Boy Pajama\",\n    content : \"Born in England\",\n    price : 35000\n  }\n]\n\nexport default Data;","import React, {useState,  useContext, lazy, Suspense} from 'react';\nimport logo from './logo.svg';\nimport { Navbar, Nav,NavDropdown, Container, Jumbotron, Button, Modal } from 'react-bootstrap';\nimport './App.css';\nimport axios from 'axios';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport Cart from './Cart.js';\nimport {useHistory} from 'react-router-dom';\nimport Data from './data.js';\nexport let 재고context = React.createContext();\n\nlet Detail = lazy(() => {return import('./Detail.js')});\n\n\n\nfunction App() {\n  \n  let[pajama, pajama변경] = useState(Data);\n  let[로딩, 로딩변경] = useState(false);\n  let[더보기카운트, 더보기카운트변경] = useState(2);\n  let[재고, 재고변경] = useState([10,11,12]);\n  \n  return (\n    <div className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\" className=\"Navbar\">\n        <Container>\n          <Navbar.Brand href=\"#home\" className=\"Nav\">Randy's Kids Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Kids\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">All </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Boy</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Girl</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Sale</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"Jumbotron\">\n            <h1>20% Season OFF!</h1>\n            <br />\n            <h4>\n              유아동 여름 상하의 한정수량 할인\n            </h4>\n            <p>2021.05.20~06.03</p>\n            <br/>\n            <p>\n              <Button variant=\"primary\">View Now</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n\n            <div className=\"row\">    \n              {\n                pajama.map((a, i) => {\n                  return <Pajama pajama={pajama[i]} i={i} />\n                })\n                }\n            </div>\n\n            </ 재고context.Provider>\n\n            {\n              로딩 === true\n              ? (<div>로딩중</div>)\n              : null\n            }\n\n            <button className=\"btn btn-primary\" onClick = {() => {\n              로딩변경(true);              \n              axios.get('https://codingapple1.github.io/shop/data' + 더보기카운트 +'.json')\n              .then((result)=>{\n                로딩변경(false);\n                console.log('요청성공');\n                더보기카운트변경(더보기카운트 + 1);\n                pajama변경([...pajama,...result.data])\n                // 마지막페이지가 되면 더보기버튼 없애줘\n              })\n              .catch((error) => {\n                로딩변경(false);\n                console.log('요청실패');\n                window.alert('페이지를 요청 할 수 없습니다.')\n              })\n              }}>더보기</button>\n          \n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중입니다!</div>}>\n              <Detail pajama={pajama} 재고={재고} 재고변경={재고변경} />\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n\n   \n    </div>\n  );\n}\n\nfunction Pajama(props, i){\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    <div className=\"col-md-4\" onClick={() => { history.push('/detail/' + props.pajama.id); }}>  \n      <img src= {'/images/pajama' + (props.i + 1) + '.jpeg'} width=\"100%\" alt=\"pajama\" />\n      <h5>{ props.pajama.title }</h5> \n      <p> { props.pajama.content} & { props.pajama.price}  </p>\n      <p>재고: {재고[props.i]}</p>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {combineReducers, createStore} from 'redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션){\n  if(액션.type === 'alert끄기' ){\n    state = false;\n    return state;\n  } else{\n    return state\n  }\n}\n\n\nlet 초기값 = [\n    { id:0, name:\"Junior Gown\", quan:2 }, \n    { id:1, name:\"Girl Pajama\", quan:1 }\n  ];\n\n  function reducer(state = 초기값, 액션){\n    if( 액션.type === '항목추가'){\n      \n      let found = state.findIndex((a) => {return a.id === 액션.payload.id});\n      \n      if(found >=0){\n        let copy=[...state];\n        copy[found].quan++;\n        return copy\n      } else {\n        let copy=[...state];\n        copy.push(액션.payload);\n        return copy\n      }\n    } else if( 액션.type === '수량증가' ){\n      let copy = [...state];\n      copy[액션.데이터].quan++;\n      return copy\n    } else if( 액션.type === '수량감소'){\n      let copy = [...state]\n      copy[액션.데이터].quan--;\n      if(copy[액션.데이터].quan < 0){\n        copy[액션.데이터].quan = 0\n      } \n      return copy\n    } else {\n      return state\n    }\n  }\n\n  let store = createStore(combineReducers({reducer, reducer2}));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}